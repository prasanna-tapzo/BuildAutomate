name: Upload - Testflight
on:
  push:
    branches:
      - main
jobs:
  test:
    runs-on: macOS-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v1
    - name: Set XCode Version
      run: sudo xcode-select -s /Applications/Xcode_13.2.1.app
      
    - name: Setup cocoapod cache
      uses: actions/cache@v2
      id: cocoapods-cache
      with:
          path: BuildAutomate/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          
          restore-keys: |
              ${{ runner.os }}-pods-
    - name: Install Dependencies
      if: steps.cocoapods-cache.outputs.cache-hit != 'true'
      run: |
        cd BuildAutomate
        pod install --repo-update

      shell: bash
    - name: Clone framewrok repo
      uses: actions/checkout@v2
      with:
          repository: CDNA-Technologies/nuclei-federal-ios-frameworks
          path: $PWD/Thirdparty\ Frameworks
          ref: UAT_13_temp
          token: ${{ secrets.PAT }}
    - name: Print
      run: |
        ls 
    - name: Install gpg
      run: brew install gnupg
    - name: Giving permission to shell files
      run: |
             chmod +x ./.github/scripts/ActualUAT.sh
             chmod +x ./.github/scripts/DR.sh
             chmod +x ./.github/scripts/DummyUAT.sh
             chmod +x ./.github/secrets/decrypt_secrets.sh
    - name: Setup provisioning profile
      env:
       IOS_KEYS: ${{ secrets.IOS_KEYS }}
      run: ./.github/secrets/decrypt_secrets.sh
    - name: Archiving & exporting Dummy UAT build
      env:
       PR_NUMBER: $(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
      if: "contains(github.event.head_commit.message, 'DUAT')"
      run: ./.github/scripts/DummyUAT.sh
    - name: Archiving & exporting Actual UAT build
      env:
       PR_NUMBER: $(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
      if: "contains(github.event.head_commit.message, 'AUAT')"
      run: ./.github/scripts/ActualUAT.sh
    - name: Archiving & exporting DR build.  
      env:
       PR_NUMBER: $(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
      if: "contains(github.event.head_commit.message, 'DR')"
      run: ./.github/scripts/DR.sh  
    
        
   
    



